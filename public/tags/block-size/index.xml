<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Block Size on My blog</title>
    <link>/tags/block-size/</link>
    <description>Recent content in Block Size on My blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>yourname@example.com (yourname)</managingEditor>
    <webMaster>yourname@example.com (yourname)</webMaster>
    <copyright>(c) 2016 Copyright my blog</copyright>
    <lastBuildDate>Fri, 05 Aug 2011 12:21:31 +0000</lastBuildDate>
    
	<atom:link href="/tags/block-size/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>VMFS-5: Block Size Me</title>
      <link>/virtualization/vmfs-5-block-size-me/</link>
      <pubDate>Fri, 05 Aug 2011 12:21:31 +0000</pubDate>
      <author>yourname@example.com (yourname)</author>
      <guid>/virtualization/vmfs-5-block-size-me/</guid>
      <description>The up and coming release of VMware vSphere 5 comes with an upgraded versjon of the VMware vStorage VMFS volume file system. One of the problems with VMFS-3 an earlier is that the block size you define when you format the datastore, determines the maximum size of the VMDK files stored on it. This means that when planning your datastore infrastructure you must have an idea on how large your VMDK files will potentially be during the lifecycle of the datastore.</description>
    </item>
    
  </channel>
</rss>